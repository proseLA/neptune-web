@import (reference) '../variables/legacy-variables.less';
@import './mixins/_border-radius.less';
@import './mixins/_buttons.less';
@import './mixins/_forms.less';
@import (reference) './mixins/_logical-properties.less';

.input-sm {
  .input-size(
    @input-height-small; @input-padding-small; @input-font-size-small; @input-line-height-small;
    @input-border-radius-small
  );
}

.input-lg {
  .input-size(
    @input-height-large; @input-padding-large; @input-font-size-large; @input-line-height-large;
    @input-border-radius-large
  );
}

.input-group {
  position: relative; // For dropdowns
  display: table;
  border-collapse: separate; // Prevent input groups from inheriting border styles from table cells when placed in a table
  width: 100%;

  // Undo padding and float of grid classes
  &[class*="col-"] {
    float: none;
    .padding(left, 0);

    .padding(start, 0);
  }

  .form-control {
    // https://github.com/twbs/bootstrap/issues/11561#issuecomment-28936855
    .float(left);

    width: 100%;
    margin-bottom: 0;

    &:not(:first-child) {
      .border(left, 0);
    }

    &:not(:last-child) {
      .border(right, 0);
    }

    border-color: var(--color-interactive-secondary);

    :hover& {
      border-color: var(--color-interactive-secondary-hover);
    }

    &:active,
    &:focus {
      border-color: var(--color-interactive-accent-active);
    }
  }

  .input-group-addon + .form-control {
    .padding(left, 0);
  }

  .form-control + .input-group-addon {
    .padding(left, 0);
  }

  &:active,
  &:focus,
  .focus & {
    .input-group-addon,
    .form-control,
    .btn-input,
    .bootstrap-select .btn-default {
      border-color: var(--color-interactive-accent-active);
    }
  }
}

// Sizing options

.input-group-lg {
  > .form-control,
  > .input-group-addon,
  > .input-group-btn .btn {
    .input-lg();

    font-size: var(--font-size-20);
    margin-bottom: 0;
  }
}

.input-group-sm > .form-control,
.input-group-sm > .input-group-addon {
  .input-sm();

  .icon {
    font-size: var(--font-size-20);
  }
}

.input-group-sm > .input-group-btn > .btn {
  .btn-sm();
}

.input-group-sm > .input-group-addon {
  line-height: 22px;
}

// Display as table-cell
// -------------------------
.input-group-addon,
.input-group-btn,
.input-group .form-control {
  display: table-cell;
}
// Addon and addon wrapper for buttons
.input-group-addon,
.input-group-btn {
  width: 1%;
  white-space: nowrap;
  vertical-align: middle; // Match the inputs
}

// Text input groups
// -------------------------
.input-group-addon {
  padding: @input-group-addon-padding;
  font-size: var(--font-size-16);
  line-height: var(--line-height-body);
  color: var(--color-content-secondary);
  text-align: center;
  background-color: var(--color-background-screen);
  border: 1px solid var(--color-interactive-secondary);

  // Sizing - over rule spacing from .input-group-sm/lg
  &.input-sm {
    padding: @input-group-addon-sm-padding !important;
  }

  &.input-lg {
    padding: @input-group-addon-lg-padding !important;
  }

  // Nuke default margins from checkboxes and radios to vertically center within.
  input[type="radio"],
  input[type="checkbox"] {
    margin-top: 0;
  }

  .icon {
    font-size: 24px;
    vertical-align: middle;
    display: inline-block;
    margin-top: -2px;
    .margin(left, -4px);
    .margin(right, -5px);
  }

  a {
    text-decoration: none;
  }

  &:empty {
    padding: 0 !important;
    // We still need the empty addon to provide border radius
    width: @border-radius-base;
  }
}

.form-group-lg .input-lg,
.form-group-lg .input-group {
  margin-bottom: 0;
}

.input-group .input-group-addon,
.input-group .form-control {
  .border-width(left,0);

  .border-width(right,0);

  border-radius: 0;
}

.input-group .input-group-btn:first-child,
.input-group .input-group-addon:first-child,
.input-group .form-control:first-child {
  .border-width(left, 1px);

  .border-radius(left, @border-radius-base);
}

.input-group .input-group-btn:last-child,
.input-group .input-group-addon:last-child,
.input-group .form-control:last-child {
  .border-width(right, 1px);

  .border-radius(right, @border-radius-base);
}

// stylelint-disable-next-line no-duplicate-selectors
.input-group {
  > :first-child .btn,
  > :first-child .btn-group {
    .border-radius(right, 0);
  }

  > :last-child .btn,
  > :last-child .btn-group {
    .border-radius(left, 0);
  }
}

// Button input groups
// -------------------------
.input-group-btn {
  position: relative;
  // Jankily prevent input button groups from wrapping with `white-space` and
  // `font-size` in combination with `inline-block` on buttons.
  font-size: 0;
  white-space: nowrap;

  // Negative margin for spacing, position for bringing hovered/focused/actived
  // element above the siblings.
  > .btn {
    position: relative;

    + .btn {
      .margin(left, -1px);
    }
    // Bring the "active" button to the front
    &:hover,
    &:focus,
    &:active {
      z-index: 2;
    }
  }

  // Negative margin to only have a 1px border between the two
  &:first-child {
    > .btn,
    > .btn-group {
      .margin(right, -1px);
    }
  }
}

// TODO deprecate
.focus .input-group,
.has-focus .input-group,
.input-group:focus-within {
  .form-control,
  .input-group-addon {
    border-color: var(--color-interactive-accent);

    &:hover {
      border-color: var(--color-interactive-accent-hover);
    }
  }
}

.has-error .input-group {
  .form-control,
  .input-group-addon {
    border-color: var(--color-interactive-negative);

    &:hover {
      border-color: var(--color-interactive-negative-hover);
    }
  }
}

.dropdown-menu {
  .input-group-addon {
    border: 0;
  }
}
